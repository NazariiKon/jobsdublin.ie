/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/create_user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create User */
        post: operations["create_user_users_create_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/create_employer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Employer */
        post: operations["create_employer_users_create_employer_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/database/init": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Init Database With Fake Data */
        post: operations["init_database_with_fake_data_database_init_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/database/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Setup Database */
        post: operations["setup_database_database__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_login_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Users Me */
        get: operations["read_users_me_login_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Google Login */
        post: operations["google_login_login_google_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vacancies/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all vacancies */
        get: operations["read_vacancies_vacancies__get"];
        put?: never;
        /** Create a vacancy */
        post: operations["create_vacancy_vacancies__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vacancies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a vacancy by id */
        get: operations["get_vacancy_by_id_vacancies__id__get"];
        /** Edit the vacancy */
        put: operations["edit_vacancy_vacancies__id__put"];
        post?: never;
        /** Delete a vacancy by id */
        delete: operations["delete_vacancy_vacancies__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vacancies/apply/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Apply CV to vacancy */
        post: operations["apply_cv_vacancies_apply__id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vacancies/applcations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get users applications by vacancy's ID */
        get: operations["get_users_applications_by_vacancy_vacancies_applcations__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a company */
        post: operations["create_company_companies__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a company by id */
        get: operations["get_company_by_id_companies__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/employer/{employer_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a company by employer id */
        get: operations["get_company_by_employer_id_companies_employer__employer_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/user/{user_id}/vacancies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get vacancies by user id */
        get: operations["get_vacancies_by_user_companies_user__user_id__vacancies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/{id}/vacancies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get vacancies by company */
        get: operations["get_vacancies_by_company_companies__id__vacancies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_apply_cv_vacancies_apply__id__post */
        Body_apply_cv_vacancies_apply__id__post: {
            /**
             * File
             * Format: binary
             */
            file: string;
        };
        /** Body_login_login_token_post */
        Body_login_login_token_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /**
             * Password
             * Format: password
             */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /**
             * Client Secret
             * Format: password
             */
            client_secret?: string | null;
        };
        /** CompanyCreate */
        CompanyCreate: {
            /** Title */
            title: string;
            /** Phone Number */
            phone_number?: string | null;
            /** Size */
            size?: string | null;
            /** Industry */
            industry?: string | null;
            /** Desc */
            desc?: string | null;
            /** Website */
            website?: string | null;
        };
        /** CompanyRead */
        CompanyRead: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Size */
            size?: string | null;
            /** Industry */
            industry?: string | null;
            /** Desc */
            desc?: string | null;
            /** Phone Number */
            phone_number?: string | null;
            /** Website */
            website?: string | null;
            /** Creator Id */
            creator_id: number;
            creator: components["schemas"]["EmployerRead"] | null;
            creator_user: components["schemas"]["UserRead"] | null;
        };
        /** EmployerRead */
        EmployerRead: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
        };
        /** EmployerSignup */
        EmployerSignup: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password?: string | null;
            /**
             * Authtype
             * @default local
             */
            authType: string;
            /**
             * Disabled
             * @default false
             */
            disabled: boolean;
            /** Name */
            name?: string | null;
            /** Surname */
            surname?: string | null;
            /** Picture */
            picture?: string | null;
            /** Cmp */
            cmp: string;
            /** Phone */
            phone: string;
        };
        /** GoogleLoginSchema */
        GoogleLoginSchema: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Family Name */
            family_name: string;
            /** Given Name */
            given_name: string;
            /** Name */
            name: string;
            /** Picture */
            picture: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Pagination */
        Pagination: {
            /** Page */
            page: number;
            /** Limit */
            limit: number;
            /** Total */
            total: number;
            /** Total Pages */
            total_pages: number;
            /** Has Next */
            has_next: boolean;
            /** Has Prev */
            has_prev: boolean;
        };
        /**
         * SalaryPeriod
         * @enum {string}
         */
        SalaryPeriod: "hour" | "week" | "month" | "year";
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /**
             * Token Type
             * @default bearer
             */
            token_type: string;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password?: string | null;
            /**
             * Authtype
             * @default local
             */
            authType: string;
            /**
             * Disabled
             * @default false
             */
            disabled: boolean;
            /** Name */
            name?: string | null;
            /** Surname */
            surname?: string | null;
            /** Picture */
            picture?: string | null;
        };
        /** UserRead */
        UserRead: {
            /** Id */
            id: number;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Disabled
             * @default false
             */
            disabled: boolean;
            /** Name */
            name?: string | null;
            /** Surname */
            surname?: string | null;
            /** Picture */
            picture?: string | null;
            /**
             * Authtype
             * @default local
             */
            authType: string;
        };
        /** UserVacancy */
        UserVacancy: {
            /** Id */
            id: number;
            user: components["schemas"]["UserRead"];
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Cv Path */
            cv_path: string;
        };
        /** VacanciesResponse */
        VacanciesResponse: {
            /** Vacancies */
            vacancies?: components["schemas"]["VacancyRead"][] | null;
            company: components["schemas"]["CompanyRead"];
        };
        /** VacancyCreate */
        VacancyCreate: {
            /** Title */
            title: string;
            /** Desc */
            desc: string;
            /**
             * Location
             * @default Dublin 1
             */
            location: string;
            /** Company Id */
            company_id: number;
            /** Min Salary */
            min_salary?: number | null;
            /** Max Salary */
            max_salary?: number | null;
            /** @default hour */
            salary_period: components["schemas"]["SalaryPeriod"];
        };
        /** VacancyRead */
        VacancyRead: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Desc */
            desc: string;
            /**
             * Location
             * @default Dublin 1
             */
            location: string;
            /** Company Id */
            company_id: number;
            company: components["schemas"]["CompanyRead"];
            /**
             * Creation Date
             * Format: date
             */
            creation_date: string;
            /** Min Salary */
            min_salary?: number | null;
            /** Max Salary */
            max_salary?: number | null;
            /** @default hour */
            salary_period: components["schemas"]["SalaryPeriod"];
        };
        /** VacancyResponse */
        VacancyResponse: {
            /** Data */
            data: components["schemas"]["VacancyRead"][];
            pagination: components["schemas"]["Pagination"];
        };
        /** VacancyWithoutCompanyRead */
        VacancyWithoutCompanyRead: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Desc */
            desc: string;
            /**
             * Location
             * @default Dublin 1
             */
            location: string;
            /**
             * Creation Date
             * Format: date
             */
            creation_date: string;
            /** Min Salary */
            min_salary?: number | null;
            /** Max Salary */
            max_salary?: number | null;
            /** @default hour */
            salary_period: components["schemas"]["SalaryPeriod"];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    create_user_users_create_user_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_employer_users_create_employer_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmployerSignup"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    init_database_with_fake_data_database_init_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    setup_database_database__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    login_login_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_login_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_users_me_login_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    google_login_login_google_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GoogleLoginSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_vacancies_vacancies__get: {
        parameters: {
            query: {
                page: number | null;
                limit: number | null;
                location?: string | null;
                key_words?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VacancyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_vacancy_vacancies__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VacancyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VacancyWithoutCompanyRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_vacancy_by_id_vacancies__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VacancyRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    edit_vacancy_vacancies__id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VacancyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_vacancy_vacancies__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    apply_cv_vacancies_apply__id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_apply_cv_vacancies_apply__id__post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_users_applications_by_vacancy_vacancies_applcations__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserVacancy"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_company_companies__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_company_by_id_companies__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_company_by_employer_id_companies_employer__employer_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                employer_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_vacancies_by_user_companies_user__user_id__vacancies_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VacanciesResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_vacancies_by_company_companies__id__vacancies_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VacancyRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
